<?php
// 1. üèóÔ∏è Initialisation du stock
// Cr√©e un tableau index√© pour mod√©liser les articles de la boutique.
$articles = ["üß¶ Chaussettes", "üëï T-shirts", "üëü Chaussures", "üëñ Pantalons", "üß¢ Casquettes"];
// Cr√©e un tableau index√© pour les quantit√©s en stock de chaque article.
$quantites = [10, 5, 8, 3, 12];
// Initialiser le tableau pour suivre le nombre de ventes pour chaque article.
$ventes = array_fill(0, count($articles), 0); 

// Affichage de la liste des articles disponibles üìÉ
echo "Liste des articles disponibles (avec boucle for) :\n";
for ($i = 0; $i < count($articles); $i++) {
    echo "$i : $articles[$i]\n"; // Affiche chaque article avec son index.
}

echo "\nListe des articles disponibles (avec boucle foreach) :\n";
foreach ($articles as $index => $article) {
    echo "$index : $article\n"; // Affiche chaque article avec son index.
}

// 2. üì¶ Gestion des Stocks
echo "\nListe des articles avec leur quantit√© en stock (avec boucle for) :\n";
for ($i = 0; $i < count($articles); $i++) {
    echo "$articles[$i] - Stock: $quantites[$i]\n"; // Affiche chaque article avec sa quantit√© en stock.
}

// 3. üõçÔ∏è R√©alisation d'une Vente
// Fonction pour g√©rer la vente d'un article
function vendreArticle(&$articles, &$quantites, &$ventes) {
    echo "\nChoisissez un article √† vendre (index) : ";
    $index = intval(trim(fgets(STDIN))); // R√©cup√®re l'index de l'article choisi par l'utilisateur.

    // V√©rifie si l'index est valide.
    if ($index < 0 || $index >= count($articles)) {
        echo "Article non valide.\n";
        return; // Quitte la fonction si l'index est invalide.
    }

    echo "Quantit√© √† vendre : ";
    $quantiteVendre = intval(trim(fgets(STDIN))); // R√©cup√®re la quantit√© √† vendre.

    // V√©rifie si le stock est suffisant.
    if ($quantites[$index] >= $quantiteVendre) {
        $quantites[$index] -= $quantiteVendre; // D√©duit la quantit√© vendue du stock.
        $ventes[$index] += $quantiteVendre; // Incr√©mente le nombre de ventes.
        echo "Vente de $quantiteVendre $articles[$index] ‚úÖ\n";
    } else {
        echo "Stock insuffisant pour $articles[$index] ‚ùå\n"; // Informe l'utilisateur en cas de stock insuffisant.
    }
}

vendreArticle($articles, $quantites, $ventes); // Appelle la fonction pour r√©aliser une vente.

// 4. üîÑ R√©approvisionnement du Stock 
// Fonction pour g√©rer le r√©approvisionnement d'un article
function reapprovisionnerArticle(&$articles, &$quantites) {
    echo "\nChoisissez un article √† r√©approvisionner (index) : ";
    $index = intval(trim(fgets(STDIN))); // R√©cup√®re l'index de l'article choisi pour r√©approvisionnement.

    // V√©rifie si l'index est valide.
    if ($index < 0 || $index >= count($articles)) {
        echo "Article non valide.\n";
        return; // Quitte la fonction si l'index est invalide.
    }

    echo "Quantit√© √† ajouter : ";
    $quantiteAjouter = intval(trim(fgets(STDIN))); // R√©cup√®re la quantit√© √† ajouter.

    $quantites[$index] += $quantiteAjouter; // Ajoute la quantit√© au stock.
    echo "Nouvelle quantit√© en stock de $articles[$index] : $quantites[$index]\n"; // Affiche la nouvelle quantit√©.
}

reapprovisionnerArticle($articles, $quantites); // Appelle la fonction pour r√©approvisionner un article.

// 5. üìä Synth√®se et Affichage du Stock 
echo "\n√âtat actuel du stock :\n";
foreach ($articles as $index => $article) {
    echo "$article - Stock: $quantites[$index]"; // Affiche chaque article avec sa quantit√©.
    if ($quantites[$index] == 0) {
        echo " (Rupture de stock) üö´"; // Indique si l'article est en rupture de stock.
    }
    echo "\n";
}

// 6. üìà Suivi des Ventes Totales par Article 
echo "\nVentes totales par article :\n";
foreach ($articles as $index => $article) {
    echo "$article - Ventes: $ventes[$index]\n"; // Affiche le nombre de ventes pour chaque article.
}

// 7. ‚ùå Suppression d'un Article 
// Fonction pour supprimer un article
function supprimerArticle(&$articles, &$quantites, &$ventes) {
    echo "\nChoisissez un article √† supprimer (index) : ";
    $index = intval(trim(fgets(STDIN))); // R√©cup√®re l'index de l'article √† supprimer.

    // V√©rifie si l'index est valide.
    if ($index < 0 || $index >= count($articles)) {
        echo "Article non valide.\n";
        return; // Quitte la fonction si l'index est invalide.
    }

    unset($articles[$index]); // Supprime l'article du tableau.
    unset($quantites[$index]); // Supprime la quantit√© correspondante.
    unset($ventes[$index]); // Supprime le nombre de ventes.

    // R√©-indexer les tableaux pour enlever les trous
    $articles = array_values($articles);
    $quantites = array_values($quantites);
    $ventes = array_values($ventes);

    echo "Article supprim√©. Liste des articles restants :\n";
    foreach ($articles as $index => $article) {
        echo "$index : $article - Stock: $quantites[$index]\n"; // Affiche la liste des articles restants.
    }
}

supprimerArticle($articles, $quantites, $ventes); // Appelle la fonction pour supprimer un article.

